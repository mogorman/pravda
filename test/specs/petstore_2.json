{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "http://petstore.swagger.io/v2"
    }
  ],
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "version": "2.0.0",
    "title": "Swagger Petstore",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "pet",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "store",
      "description": "Access to Petstore orders"
    },
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/pravda/pets": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "description": "",
        "operationId": "addPet",
        "parameters": [
	  	  {
            "required": true,
            "name": "new-header",
            "description": "a new version a new header",
            "in": "header",
            "schema": {
	      "description": "its required bub",
              "type": "string"
            }
		  },
	  {
            "required": false,
            "name": "spec-version",
            "description": "The OpenAPI Spec version that the  SDK is conforming to.",
            "in": "header",
            "schema": {
	      "description": "A semantic version string, in the format [major].[minor].[patch].",
              "type": "string"
            }
	  },
	  {
            "required": true,
            "name": "doggie",
            "description": "are you a doggie",
            "in": "header",
            "schema": {
	      "description": "set doggie header please",
              "type": "string"
            }
	  }
	],
        "responses": {
          "200": {
            "description": "success",
	    "content" : {
	      "application/json" : {
		"schema": {
		  "type": "object",
		  "required": [
		    "pravda_pet"
		  ],
		  "properties": {
		    "pravda_pet": {
		      "type": "string",
		      "example": "fdsa"
		    }
		  }
		}
	      }
	    }
	  }
	},
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        },
        "description": "Pet object that needs to be added to the store",
        "required": true
        }
      }
    },
    "/pravda_dont_validate_output/pets": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "description": "",
        "operationId": "addPet",
        "parameters": [
	  	  {
            "required": true,
            "name": "new-header",
            "description": "a new version a new header",
            "in": "header",
            "schema": {
	      "description": "its required bub",
              "type": "string"
            }
		  },
	  {
            "required": false,
            "name": "spec-version",
            "description": "The OpenAPI Spec version that the  SDK is conforming to.",
            "in": "header",
            "schema": {
	      "description": "A semantic version string, in the format [major].[minor].[patch].",
              "type": "string"
            }
	  },
	  {
            "required": true,
            "name": "doggie",
            "description": "are you a doggie",
            "in": "header",
            "schema": {
	      "description": "set doggie header please",
              "type": "string"
            }
	  }
	],
        "responses": {
          "200": {
            "description": "success",
	    "content" : {
	      "application/json" : {
		"schema": {
		  "type": "object",
		  "required": [
		    "pravda_pet"
		  ],
		  "properties": {
		    "pravda_pet": {
		      "type": "string",
		      "example": "fdsa"
		    }
		  }
		}
	      }
	    }
	  }
	},
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        },
        "description": "Pet object that needs to be added to the store",
        "required": true
        }
      }
    },
    "/pravda_dont_migrate/pets": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "description": "",
        "operationId": "addPet",
        "parameters": [
	  	  {
            "required": true,
            "name": "new-header",
            "description": "a new version a new header",
            "in": "header",
            "schema": {
	      "description": "its required bub",
              "type": "string"
            }
		  },
	  {
            "required": false,
            "name": "spec-version",
            "description": "The OpenAPI Spec version that the  SDK is conforming to.",
            "in": "header",
            "schema": {
	      "description": "A semantic version string, in the format [major].[minor].[patch].",
              "type": "string"
            }
	  },
	  	  {
            "required": false,
            "name": "spec-version",
            "description": "The OpenAPI Spec version that the  SDK is conforming to.",
            "in": "query",
            "schema": {
	      "description": "A semantic version string, in the format [major].[minor].[patch].",
              "type": "string"
            }
	  },
	  {
            "required": true,
            "name": "doggie",
            "description": "are you a doggie",
            "in": "header",
            "schema": {
	      "description": "set doggie header please",
              "type": "string"
            }
	  }
	],
        "responses": {
          "200": {
            "description": "success",
	    "content" : {
	      "application/json" : {
		"schema": {
		  "type": "object",
		  "required": [
		    "pravda_pet"
		  ],
		  "properties": {
		    "pravda_pet": {
		      "type": "string",
		      "example": "fdsa"
		    }
		  }
		}
	      }
	    }
	  }
	},
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        },
        "description": "Pet object that needs to be added to the store",
        "required": true
        }
      }
    },
    "/pravda_invalid/pets": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "description": "",
        "operationId": "addPet",
        "parameters": [
	  {
            "required": false,
            "name": "spec-version",
            "description": "The OpenAPI Spec version that the  SDK is conforming to.",
            "in": "header",
            "schema": {
	      "description": "A semantic version string, in the format [major].[minor].[patch].",
              "type": "string"
            }
	  },
	  {
            "required": true,
            "name": "doggie",
            "description": "are you a doggie",
            "in": "header",
            "schema": {
	      "description": "set doggie header please",
              "type": "string"
            }
	  }
	],
        "responses": {
          "200": {
            "description": "success",
	    "content" : {
	      "application/json" : {
		"schema": {
		  "type": "object",
		  "required": [
		    "pravda_pet"
		  ],
		  "properties": {
		    "pravda_pet": {
		      "type": "string",
		      "example": "fdsa"
		    }
		  }
		}
	      }
	    }
	  }
	},
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        },
        "description": "Pet object that needs to be added to the store",
        "required": true
        }
      }
    },
    "/pravda_skip/pets": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "description": "",
        "operationId": "addPet",
        "parameters": [
	  {
            "required": false,
            "name": "spec-version",
            "description": "The OpenAPI Spec version that the  SDK is conforming to.",
            "in": "header",
            "schema": {
	      "description": "A semantic version string, in the format [major].[minor].[patch].",
              "type": "string"
            }
	  },
	  {
            "required": true,
            "name": "doggie",
            "description": "are you a doggie",
            "in": "header",
            "schema": {
	      "description": "set doggie header please",
              "type": "string"
            }
	  }
	],
        "responses": {
          "200": {
            "description": "success",
	    "content" : {
	      "application/json" : {
		"schema": {
		  "type": "object",
		  "required": [
		    "pravda_pet"
		  ],
		  "properties": {
		    "pravda_pet": {
		      "type": "string",
		      "example": "fdsa"
		    }
		  }
		}
	      }
	    }
	  }
	},
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        },
        "description": "Pet object that needs to be added to the store",
        "required": true
        }
      }
    },
        "/pravda_function/pets": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "description": "",
        "operationId": "addPet",
        "parameters": [
	  {
            "required": false,
            "name": "spec-version",
            "description": "The OpenAPI Spec version that the  SDK is conforming to.",
            "in": "header",
            "schema": {
	      "description": "A semantic version string, in the format [major].[minor].[patch].",
              "type": "string"
            }
	  },
	  {
            "required": true,
            "name": "doggie",
            "description": "are you a doggie",
            "in": "header",
            "schema": {
	      "description": "set doggie header please",
              "type": "string"
            }
	  }
	],
        "responses": {
          "200": {
            "description": "success",
	    "content" : {
	      "application/json" : {
		"schema": {
		  "type": "object",
		  "required": [
		    "pravda_pet"
		  ],
		  "properties": {
		    "pravda_pet": {
		      "type": "string",
		      "example": "fdsa"
		    }
		  }
		}
	      }
	    }
	  }
	},
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        },
        "description": "Pet object that needs to be added to the store",
        "required": true
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "petId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean",
            "default": false
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "Pet": {
        "type": "object",
        "required": [
          "name",
          "photoUrls"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
	  "spec-version": {
            "type": "string",
            "example": "2.0.0"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "name": "photoUrl",
              "wrapped": true
            },
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "Pet"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "examples": {},
    "requestBodies": {
      "Pet": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        },
        "description": "Pet object that needs to be added to the store",
        "required": true
      },
      "UserArray": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "description": "List of user object",
        "required": true
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    },
    "headers": {}
  }
}
